# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Test generated for /recipients/branches/{id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9caaa2ef96
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1

scenarios:
  - name: "Validate successful responses for PATCH /recipients/branches/{id}"
    flow:
      - log: "Starting PATCH request to /recipients/branches/{id} with valid data"
      - patch:
          url: "/recipients/branches/{{ id }}"
          headers:
            Content-Type: "application/json"
            ApiKey: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            tradeName: "{{ tradeName }}"
            phone: "{{ phone }}"
            email: "{{ email }}"
      - expect:
          statusCode: 200
      - expect:
          hasHeader: "api-version"
      - expect:
          headerEquals: 
            name: "api-version"
            value: "1.0.0"
      - expect:
          hasProperty: "id"
      - expect:
          hasProperty: "tradeName"
      - expect:
          hasProperty: "tradeNames"
      - expect:
          hasProperty: "createdAt"
      - expect:
          hasProperty: "updatedAt"
      - expect:
          matchesRegexp:
            property: "email"
            pattern: "^(([^<>()[\\]\\.,;:\\s@\"]+(\\.[^<>()[\\]\\.,;:\\s@\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"
      - expect:
          matchesRegexp:
            property: "cocNumber"
            pattern: "^\\d{8}$"
      - expect:
          matchesRegexp:
            property: "cocBranchNumber"
            pattern: "^\\d{12}$"
      - expect:
          matchesRegexp:
            property: "eoriNumber"
            pattern: "^NL\\d{9}$"
      - think: 1
