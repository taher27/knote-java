# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/branches/{id}/registrations_post for http method type POST 
# RoostTestHash=16a6858a84
# 
# 

# ********RoostGPT********
Feature: Create new Registration for the Recipient

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def AuthToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = AuthToken

  Scenario Outline: Create new registration with valid data
    Given path 'recipients/branches/', <id>, '/registrations'
    And request <requestBody>
    When method post
    Then status 201
    And match responseHeaders['api-version'] == '1.0.0'
    And match responseHeaders['location'] != null
    And match response == <expectedResponse>

    Examples:
      | read('recipients_branches_id_registrations_post.csv') |

  Scenario Outline: Create new registration with invalid data
    Given path 'recipients/branches/', <id>, '/registrations'
    And request <requestBody>
    When method post
    Then status 400
    And match responseHeaders['api-version'] == '1.0.0'
    And match response == <expectedResponse>

    Examples:
      | id                                     | requestBody                                                                             | expectedResponse                                                                                                       |
      | '123e4567-e89b-12d3-a456-426614174000' | { "reference": "ref-001", "startDate": "invalid-date", "credentialUrl": "invalid-url" } | { "description": "#string", "error": "error/code", "field": "#string", "value": "#string", "schema_field": "#string" } |

  Scenario: Create new registration without authentication
    Given path 'recipients/branches/123e4567-e89b-12d3-a456-426614174000/registrations'
    And request
      """
      { 
        "reference": "ref-002", 
        "startDate": "2022-01-01", 
        "credentialUrl": "http://example.com/credential" 
      }
      """
    And header ApiKeyAuth = ''
    When method post
    Then status 401
    And match responseHeaders['api-version'] == '1.0.0'
    And match response
      """
      { 
        "description": "#string", 
        "error": "#string" 
      }
      """
