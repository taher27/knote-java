# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/persons/{id}/registrations_get for http method type GET 
# RoostTestHash=318c363c90
# 
# 

# ********RoostGPT********
Feature: Recipient Person Registrations API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * def authToken = karate.properties['AUTH_TOKEN']
    * url urlBase
    * header ApiKeyAuth = authToken

  Scenario Outline: Get a person's registration details with valid inputs
    Given path 'recipients/persons/', <id>, '/registrations'
    And param credential-url = <credential_url>
    And param size = <size>
    And param offset = <offset>
    When method get
    Then status 200
    And assert response.headers['api-version'] != null
    And assert response['total'] != null
    And assert response['registrations'] != null
    And match each response.registrations[*] contains { 'id': '#uuid', 'status': 'active' }

    Examples:
      | read('recipients_persons_id_registrations_get.csv') |

  Scenario: Get a person's registration details without credential-url
    Given path 'recipients/persons/d290f1ee-6c54-4b01-90e6-d701748f0851/registrations'
    And param size = 20
    And param offset = 0
    When method get
    Then status 200
    And assert response.headers['api-version'] != null
    And assert response['total'] != null
    And assert response['registrations'] != null

  Scenario: Get a person's registration details with invalid id
    Given path 'recipients/persons/invalid-uuid/registrations'
    And param size = 20
    And param offset = 0
    When method get
    Then status 400
    And assert response.headers['api-version'] != null
    And match response contains { error: '#string', description: 'Descriptive Error Message' }

  Scenario: Get a person's registration details without authorization
    Given path 'recipients/persons/d290f1ee-6c54-4b01-90e6-d701748f0851/registrations'
    And param credential-url = 'http://example.com/cred'
    And param size = 20
    And param offset = 0
    * header ApiKeyAuth = null
    When method get
    Then status 401
    And assert response.headers['api-version'] != null
    And match response contains { error: '#string', description: 'Descriptive Error Message' }
