# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/persons_get for http method type GET 
# RoostTestHash=aa0a5d4980
# 
# 

# ********RoostGPT********
Feature: Recipient Person API Endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario Outline: Get a list of persons with various query parameters
    Given path '/recipients/persons'
    And param size = <size>
    And param offset = <offset>
    And param name = <name>
    And param birthDate = <birth_date>
    When method get
    Then status 200
    And match responseHeaders['api-version'] == '#string'
    And match responseHeaders['page-size'] == '#number'
    And match responseHeaders['page-offset'] == '#number'
    And match response.total == '#number'
    And match response.persons[*].id == '#uuid'
    And match response.persons[*].initials == '#regex(^[A-Z]{1,6}$)'
    And match response.persons[*].firstName == '#regex(^[\\p{L} .\'-]{1,50}$)'
    And match response.persons[*].lastName == '#regex(^[\\p{L} .\'-]{2,50}$)'
    And match response.persons[*].birthDate == '#string'
    And match response.persons[*].createdAt == '#string'
    And match response.persons[*].updatedAt == '#string'
    And match each response.persons[*].email == '#regex(^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)'

    Examples:
      | read('recipients_persons_get.csv') |

  Scenario: Get a list of persons without providing any query parameters
    Given path '/recipients/persons'
    When method get
    Then status 200
    And match responseHeaders['api-version'] == '#string'
    And match responseHeaders['page-size'] == '#number'
    And match responseHeaders['page-offset'] == '#number'
    And match response.total == '#number'
    And match response.persons[*].id == '#uuid'

  Scenario: Get a list of persons with invalid size parameter
    Given path '/recipients/persons'
    And param size = '100'
    When method get
    Then status 400
    And match response.error == '#string'
    And match response.description == '#string'

  Scenario: Get a list of persons with invalid offset parameter
    Given path '/recipients/persons'
    And param offset = '-1'
    When method get
    Then status 400
    And match response.error == '#string'
    And match response.description == '#string'

  Scenario: Get a list of persons with missing authorization
    Given path '/recipients/persons'
    And header ApiKeyAuth = ''
    When method get
    Then status 401
    And match response.error == '#string'
    And match response.description == '#string'
