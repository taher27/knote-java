# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/persons_post for http method type POST 
# RoostTestHash=b4614c0581
# 
# 

# ********RoostGPT********
Feature: Recipient Person API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Create a new person-recipient of a Credential with valid data
    Given path '/recipients/persons'
    And header ApiKeyAuth = authToken
    And header Content-Type = 'application/json'
    And request
      """
      <body>
      """
    When method post
    Then status 201
    And match responseHeaders.api-version == '1.0.0'
    And match responseHeaders.location contains '/recipients/persons/'
    And match response ==
      """
      { 
        id: '#uuid', 
        initials: '#regex(^[A-Z]{1,6}$)', 
        lastName: '#regex(^[\\p{L} .'-]{2,50}$)', 
        birthDate: '#date' 
      }
      """

    Examples:
      | read('recipients_persons_post.csv') |

  Scenario Outline: Create a new person-recipient with invalid data
    Given path '/recipients/persons'
    And header ApiKeyAuth = authToken
    And header Content-Type = 'application/json'
    And request
      """
      <body>
      """
    When method post
    Then status 400
    And match responseHeaders.api-version == '1.0.0'
    And match response ==
      """
      { 
        error: '#string', 
        description: '#string' 
      }
      """

    Examples:
      | body |

  Scenario: Create a new person-recipient without authorization
    Given path '/recipients/persons'
    And header Content-Type = 'application/json'
    And request
      """
      { 
        "initials": "JD", 
        "lastName": "Doe", 
        "birthDate": "1990-01-01" 
      }
      """
    When method post
    Then status 401
    And match responseHeaders.api-version == '1.0.0'
    And match response ==
      """
      { 
        error: '#string', 
        description: '#string' 
      }
      """
