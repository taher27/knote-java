# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /registrations_get for http method type GET 
# RoostTestHash=6ec067b2e9
# 
# 

# ********RoostGPT********
Feature: Registrations Endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario Outline: Get registrations with valid query parameters
    Given path '/registrations'
    And param size = <size>
    And param offset = <offset>
    And param recipient-id = <recipient_id>
    And param credential-url = <credential_url>
    When method get
    Then status 200
    And assert response.headers['api-version'] == '1.0.0'
    And assert response.headers['page-size'] == <size>
    And assert response.headers['page-offset'] == <offset>
    And match response contains { total: '#number', registrations: '#array' }
    And match each response.registrations contains { id: '#uuid', startDate: '#string', status: '#string', credentialUrl: '#regex[\\w+:(\\/\\/)?[^\\s]+]' }

    Examples:
      | read('registrations_get.csv') |

  Scenario: Get registrations with missing recipient-id and credential-url
    Given path '/registrations'
    And param size = 20
    And param offset = 0
    When method get
    Then status 200
    And assert response.headers['api-version'] == '1.0.0'
    And assert response.headers['page-size'] == 20
    And assert response.headers['page-offset'] == 0
    And match response contains { total: '#number', registrations: '#array' }

  Scenario: Get registrations with invalid size parameter
    Given path '/registrations'
    And param size = 100
    And param offset = 0
    When method get
    Then status 400
    And assert response.headers['api-version'] == '1.0.0'
    And match response ==
      """
      {
        error: '#string',
        description: 'Descriptive Error Message'
      }
      """

  Scenario: Unauthorized access to the registrations endpoint
    Given path '/registrations'
    And header ApiKeyAuth = ''
    When method get
    Then status 401
    And assert response.headers['api-version'] == '1.0.0'
    And match response ==
      """
      {
        error: '#string',
        description: 'Descriptive Error Message'
      }
      """
