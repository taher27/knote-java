# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_patch for http method type PATCH 
# RoostTestHash=6dd436357d
# 
# 

# ********RoostGPT********
Feature: Change my settings or account name

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def AuthHeader = { Authorization: '#(karate.properties['AUTH_TOKEN'])' }
    * def validPayload = { name: 'John Doe', image: 'data:image/jpeg;base64,<clipped>', settings: { theme: 'dark' } }
    * def invalidPayload = { name: '', image: 'invalid', settings: 'not an object' }

  Scenario Outline: Update account settings with valid payload and verify response
    Given path '/me'
    And request <payload>
    And header AuthHeader
    When method POST
    Then status 200
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { id: '#uuid', email: '#regex(^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)' }
    And match response.createdAt == '#datetime'
    And match response.updatedAt == '#datetime'

    Examples:
      | read('me_patch.csv') |

  Scenario: Update account settings with invalid payload and verify response
    Given path '/me'
    And request invalidPayload
    And header AuthHeader
    When method POST
    Then status 400
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }

  Scenario: Update account settings without authorization header
    Given path '/me'
    And request validPayload
    When method POST
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }
