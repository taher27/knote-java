# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /credentials/{id}_get for http method type GET 
# RoostTestHash=018c225aea
# 
# 

# ********RoostGPT********
Feature: Credential retrieval from wallet

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def validUuid = '123e4567-e89b-12d3-a456-426614174000'

  Scenario Outline: Get a credential by ID with valid UUID
    Given path 'credentials', '<id>'
    And header ApiKeyAuth = authToken
    When method get
    Then status 200
    And match responseHeaders contains { 'api-version': '#string' }
    And match response ==
      """
      {
        "id": "#uuid",
        "format": "#string",
        "credential": "#string",
        "status": "#string",
        "statusUpdatedAt": "#string",
        "createdAt": "#string"
      }
      """

    Examples:
      | read('credentials_id_get.csv') |

  Scenario Outline: Get a credential by ID with invalid UUID
    Given path 'credentials', '<id>'
    And header ApiKeyAuth = authToken
    When method get
    Then status 400
    And match responseHeaders contains { 'api-version': '#string' }
    And match response ==
      """
      {
        "error": "#string",
        "description": "#string"
      }
      """

    Examples:
      | id        |
      | 'invalid' |

  Scenario: Get a credential by ID without authorization
    Given path 'credentials', validUuid
    When method get
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response ==
      """
      {
        "error": "#string",
        "description": "#string"
      }
      """
