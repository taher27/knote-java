# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/persons/{id}_get for http method type GET 
# RoostTestHash=131d25110f
# 
# 

# ********RoostGPT********
Feature: Recipient Person RESTful API

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario Outline: Get recipient person with valid UUID
    Given path 'recipients/persons', '<id>'
    When method get
    Then status 200
    And match response contains { id: '#uuid', initials: '#regex(^[A-Z]{1,6}$)' }
    And match response contains { firstName: '#regex(^[\\p{L} .\'-]{1,50}$)' }
    And match response contains { lastName: '#regex(^[\\p{L} .\'-]{2,50}$)', birthDate: '#date', createdAt: '#datetime', updatedAt: '#datetime' }
    And match header api-version == '1.0.0'

    Examples:
      | read('recipients_persons_id_get.csv') |

  Scenario: Attempt to get recipient person with invalid UUID
    Given path 'recipients/persons', 'invalid-uuid'
    When method get
    Then status 400
    And match response == { error: '#string', description: 'Descriptive Error Message' }
    And match header api-version == '1.0.0'

  Scenario: Get recipient person without authorization token
    * header ApiKeyAuth = ''
    Given path 'recipients/persons', '123e4567-e89b-12d3-a456-426614174000'
    When method get
    Then status 401
    And match response == { error: '#string', description: 'Descriptive Error Message' }
    And match header api-version == '1.0.0'
