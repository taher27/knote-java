# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/branches_get for http method type GET 
# RoostTestHash=74a40da00e
# 
# 

# ********RoostGPT********
Feature: Recipient Branch RESTful API

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def AuthToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = AuthToken

  Scenario Outline: Test GET /recipients/branches with valid query parameters
    Given path '/recipients/branches'
    And param coc-number = '<coc-number>'
    And param coc-branch-number = '<coc-branch-number>'
    And param trade-name = '<trade-name>'
    And param size = <size>
    And param offset = <offset>
    When method get
    Then status 200
    And match response contains
      """
      { 
        total: '#number', 
        branches: '#array' 
      }
      """
    And match each response.branches[*] contains
      """
      { 
        id: '#uuid', 
        tradeName: '#string', 
        createdAt: '#string', 
        updatedAt: '#string' 
      }
      """
    And header api-version == '1.0.0'
    And header page-size == <size>
    And header page-offset == <offset>

    Examples:
      | read('recipients_branches_get.csv') |

  Scenario Outline: Test GET /recipients/branches with invalid coc-number pattern
    Given path '/recipients/branches'
    And param coc-number = '<coc-number>'
    When method get
    Then status 400
    And match response contains
      """
      { 
        error: '#string', 
        description: '#string' 
      }
      """

    Examples:
      | coc-number |
      | '1234'     |
      | 'abcdefgh' |

  Scenario: Test GET /recipients/branches with unauthorized access
    Given path '/recipients/branches'
    And header ApiKeyAuth = null
    When method get
    Then status 401
    And match response contains
      """
      { 
        error: '#string', 
        description: '#string' 
      }
      """
