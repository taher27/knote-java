# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /recipients/branches/{id}_patch for http method type PATCH 
# RoostTestHash=9caaa2ef96
# 
# 

# ********RoostGPT********
Feature: Recipient Branch Management

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario Outline: Update recipient branch details with valid data
    Given path 'recipients/branches/', <id>
    And request
      """
      <requestBody>
      """
    When method PUT
    Then status 200
    And match responseHeaders['api-version'] == '1.0.0'
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | read('recipients_branches_id_patch.csv') |

  Scenario Outline: Update recipient branch details with invalid email
    Given path 'recipients/branches/', <id>
    And request
      """
      <requestBody>
      """
    When method PUT
    Then status 400
    And match responseHeaders['api-version'] == '1.0.0'
    And match response ==
      """
      <expectedError>
      """

    Examples:
      | id                                     | requestBody                                                                      | expectedError                                                                                                                         |
      | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | { "tradeName": "Invalid Email", "phone": "1234567890", "email": "invalidemail" } | { "error": "validation/email-pattern", "description": "Descriptive Error Message", "schema_field": "email", "value": "invalidemail" } |

  Scenario: Unauthorized access to update recipient branch details
    Given path 'recipients/branches/d290f1ee-6c54-4b01-90e6-d701748f0851'
    And request
      """
      { "tradeName": "Unauthorized", "phone": "1234567890", "email": "unauthorized@example.com" }
      """
    And header ApiKeyAuth = 'invalid-token'
    When method PUT
    Then status 401
    And match responseHeaders['api-version'] == '1.0.0'
    And match response ==
      """
      { "error": "error/code", "description": "Authentication Required" }
      """
