# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /grants_get for http method type GET 
# RoostTestHash=692c6b853f
# 
# 

# ********RoostGPT********
Feature: Retrieve accounts with granted access permissions

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * header ApiKeyAuth = karate.properties['AUTH_TOKEN']

  Scenario: Successfully retrieving accounts with granted access permissions
    Given url urlBase + '/grants'
    When method get
    Then status 200
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { total: '#number', grants: '#array' }
    And match each response.grants[*] contains { id: '#uuid', token: '#regex(^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$)', createdAt: '#string', updatedAt: '#string', account: '#object' }
    And match each response.grants[*].account contains { id: '#uuid', name: '#regex(^[\\p{L} .\'-]{1,100}$)', email: '#regex(^(([^<>()[\\]\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)' }

  Scenario: Retrieving accounts with granted access permissions with unauthorized access
    Given url urlBase + '/grants'
    And header ApiKeyAuth = null
    When method get
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }
