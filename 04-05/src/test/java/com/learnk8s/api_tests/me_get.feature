# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario: Get my account details with valid API key
    Given path '/me'
    When method get
    Then status 200
    And match header api-version == '1.0.0'
    And match response ==
      """
      {
        id: '#uuid',
        did: '##string',
        name: '##regex(^[\\p{L} .\'-]{1,100}$)',
        image: '##regex(^\\w+:(\\/\\/?)[^\\s]+$)',
        email: '#regex(^(([^<>()[\\]\\\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)',
        settings: '#object',
        createdAt: '#string',
        updatedAt: '#string'
      }
      """
    And assert response.createdAt =~ /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?/
    And assert response.updatedAt =~ /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?/

  Scenario: Get my account details with invalid or missing API key
    Given path '/me'
    And header ApiKeyAuth = ''
    When method get
    Then status 401
    And match header api-version == '1.0.0'
    And match response ==
      """
      {
        error: '#string',
        description: '#string'
      }
      """

  Scenario Outline: Get my account details with bad request
    Given path '/me'
    And param invalidParam = 'invalidValue'
    When method get
    Then status 400
    And match header api-version == '1.0.0'
    And match response == <response>

    Examples:
      | response                                                                                                                   |
      | { error: '#string', description: '#string' }                                                                               |
      | { error: '#regex(^validation/.+$)', description: '#string', value: '#notnull', field: '#string', schema_field: '#string' } |
