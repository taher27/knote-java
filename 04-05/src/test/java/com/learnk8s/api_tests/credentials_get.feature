# ********RoostGPT********

# Test generated by RoostGPT for test karteKnoteTest using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /credentials_get for http method type GET 
# RoostTestHash=66f52a572f
# 
# 

# ********RoostGPT********
Feature: All credentials in my Wallet

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header ApiKeyAuth = authToken

  Scenario Outline: Get credentials with valid size and offset parameters
    Given path '/credentials'
    And param size = <size>
    And param offset = <offset>
    When method get
    Then status 200
    And match header api-version == '1.0.0'
    And match header page-size == '#number'
    And match header page-offset == '#number'
    And match response.total == '#number'
    And match each response.credentials[*].id == '#uuid'
    And match each response.credentials[*].format == '#regex(jwt_vc_json|jwt_vc_json-ld|ldp_vc)'
    And match each response.credentials[*].credential == '#string'
    And match each response.credentials[*].status == '#regex(active|suspended|revoked|expired|pending)'
    And match each response.credentials[*].statusUpdatedAt == '#string'
    And match each response.credentials[*].createdAt == '#string'

    Examples:
      | read('credentials_get.csv') |

  Scenario: Get credentials with missing size and offset parameters
    Given path '/credentials'
    When method get
    Then status 200
    And match header api-version == '1.0.0'
    And match header page-size == '#number'
    And match header page-offset == '#number'
    And match response.total == '#number'
    And match each response.credentials[*].id == '#uuid'
    And match each response.credentials[*].format == '#regex(jwt_vc_json|jwt_vc_json-ld|ldp_vc)'
    And match each response.credentials[*].credential == '#string'
    And match each response.credentials[*].status == '#regex(active|suspended|revoked|expired|pending)'
    And match each response.credentials[*].statusUpdatedAt == '#string'
    And match each response.credentials[*].createdAt == '#string'

  Scenario: Get credentials with invalid size parameter
    Given path '/credentials'
    And param size = -1
    When method get
    Then status 400
    And match header api-version == '1.0.0'
    And match response.description == '#string'
    And match response.error == '#string'

  Scenario: Get credentials with invalid offset parameter
    Given path '/credentials'
    And param offset = -1
    When method get
    Then status 400
    And match header api-version == '1.0.0'
    And match response.description == '#string'
    And match response.error == '#string'

  Scenario: Get credentials without authorization
    * header ApiKeyAuth = null
    Given path '/credentials'
    When method get
    Then status 401
    And match header api-version == '1.0.0'
    And match response.description == '#string'
    And match response.error == '#string'
